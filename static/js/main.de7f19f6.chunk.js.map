{"version":3,"sources":["components/AnimatedCursor.js","components/Navbar.js","components/App.js","reducers/authReducer.js","index.js","reducers/index.js"],"names":["innerSize","outerSize","color","outerAlpha","innerScale","outerScale","Navbar","className","role","aria-label","href","class","aria-expanded","aria-hidden","id","style","font","React","Component","Landing","Dashboard","ding","App","AnimatedCursor","exact","path","component","state","action","type","store","createStore","combineReducers","auth","authReducer","applyMiddleware","ReactDOM","render","document","querySelector"],"mappings":"8OAGe,aACX,OACI,6BACJ,kBAAC,IAAD,CACEA,UAAW,EACXC,UAAW,EACXC,MAAM,cACNC,WAAY,GACZC,WAAY,GACZC,WAAY,M,gCCgDHC,E,uKAxDX,OACE,yBACEC,UAAU,kBACVC,KAAK,aACLC,aAAW,mBAEX,yBAAKF,UAAU,gBACb,uBAAGA,UAAU,cAAcG,KAAK,mBAC9B,wBAAIH,UAAU,eAAd,WAGF,uBACEC,KAAK,SACLG,MAAM,gBACNF,aAAW,OACXG,gBAAc,SAEd,0BAAMC,cAAY,SAClB,0BAAMA,cAAY,SAClB,0BAAMA,cAAY,WAItB,yBAAKC,GAAG,cAAcP,UAAU,eAC9B,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,cAAcG,KAAK,WAC9B,uBAAGH,UAAU,cAAcQ,MAAO,CAAEC,KAAM,SAA1C,YAKF,uBAAGT,UAAU,cAAcG,KAAK,aAC9B,uBAAGH,UAAU,cAAcQ,MAAO,CAAEC,KAAM,SAA1C,gBAON,yBAAKT,UAAU,cACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,WACb,uBAAGA,UAAU,mBACX,uBAAGA,UAAU,eAAb,YAEF,uBAAGA,UAAU,kBAAkBG,KAAK,gBAClC,uBAAGH,UAAU,eAAb,kB,GAhDKU,IAAMC,WCKrBC,EAAU,kBAAM,+BAChBC,EAAY,kBAChB,6BACE,2CAGEC,EAAO,kBACX,6BACE,sCA8BWC,MA1Bf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAACC,EAAD,MAEA,yBAAKhB,UAAU,WACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,SACb,sCACA,uBAAGA,UAAU,UAAb,kCAGF,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CAAOiB,OAAO,EAAMC,KAAK,IAAIC,UAAWP,IACxC,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,WAAWC,UAAWN,IACxC,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,eAAeC,UAAWL,U,OCpC3C,aAA+B,IAArBM,EAAoB,uDAAZ,GAAIC,EAAQ,uCAGvC,OAFIA,EAAOC,KAEJF,G,gBCIPG,EAAQC,aCFC,WACXC,YAAgB,CACZC,KAAOC,MDAoB,GAAIC,eASvCC,IAASC,OACP,kBAAC,IAAD,CAAUP,MAASA,GACjB,kBAAC,EAAD,OAEFQ,SAASC,cAAc,Y","file":"static/js/main.de7f19f6.chunk.js","sourcesContent":["import React from 'react';\r\nimport AnimatedCursor from 'react-animated-cursor';\r\n\r\nexport default function(){\r\n    return(\r\n        <div>\r\n    <AnimatedCursor\r\n      innerSize={8}\r\n      outerSize={8}\r\n      color='255,255,255'\r\n      outerAlpha={0.2}\r\n      innerScale={0.7}\r\n      outerScale={5}\r\n    />\r\n    </div>\r\n    );\r\n}","import React, { Component } from \"react\";\r\n\r\nclass Navbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <nav\r\n        className=\"navbar is-light\"\r\n        role=\"navigation\"\r\n        aria-label=\"main navigation\"\r\n      >\r\n        <div className=\"navbar-brand\">\r\n          <a className=\"navbar-item\" href=\"localhost:3000/\">\r\n            <h3 className=\"websiteFont\">Thyme.</h3>\r\n          </a>\r\n\r\n          <a\r\n            role=\"button\"\r\n            class=\"navbar-burger\"\r\n            aria-label=\"menu\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            <span aria-hidden=\"true\"></span>\r\n            <span aria-hidden=\"true\"></span>\r\n            <span aria-hidden=\"true\"></span>\r\n          </a>\r\n        </div>\r\n\r\n        <div id=\"ThymeNavbar\" className=\"navbar-menu\">\r\n          <div className=\"navbar-start\">\r\n            <a className=\"navbar-item\" href=\"/browse\">\r\n              <p className=\"websiteFont\" style={{ font: \"40px\" }}>\r\n                browse.\r\n              </p>\r\n            </a>\r\n\r\n            <a className=\"navbar-item\" href=\"/about-us\">\r\n              <p className=\"websiteFont\" style={{ font: \"40px\" }}>\r\n                about us.\r\n              </p>\r\n            </a>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"navbar-end\">\r\n          <div className=\"navbar-item\">\r\n            <div className=\"buttons\">\r\n              <a className=\"button is-black\">\r\n                <p className=\"websiteFont\">Sign up</p>\r\n              </a>\r\n              <a className=\"button is-light\" href=\"/auth/google\">\r\n                <p className=\"websiteFont\">Login</p>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport AnimatedCursor from \"./AnimatedCursor\";\nimport Navbar from \"./Navbar\";\n\nconst Landing = () => <div></div>;\nconst Dashboard = () => (\n  <div>\n    <h2>Dashboard</h2>\n  </div>\n);\nconst ding = () => (\n  <div>\n    <h2>ding</h2>\n  </div>\n);\n\nfunction App() {\n  return (\n    <div>\n      <Navbar />\n      <AnimatedCursor />\n\n      <div className=\"mainApp\">\n        <div className=\"overlay\">\n          <div className=\"thyme\">\n            <h1>Thyme.</h1>\n            <p className=\"slogan\">Your meeting place ? Sorted !</p>\n          </div>\n\n          <BrowserRouter>\n            <div>\n              <Route exact={true} path=\"/\" component={Landing}></Route>\n              <Route exact path=\"/surveys\" component={Dashboard}></Route>\n              <Route exact path=\"/surveys/new\" component={ding}></Route>\n            </div>\n          </BrowserRouter>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n/*\n\nNotes:\n* The Router takes the path as a string and checks whether the string is present(substring)\ninside the address typed in the browser.\n* We need to add 'exact' parameter inside the router tag in order to show the landing\ncomponent only when the path is / but not any other address containing '/'\n* If exact isnt added, then when we go to the /surveys, obviously route path '/' is \npresent inside the /surveys (a substring) and hence it shows Landing component too\nwhich is undesirable\n* We can just type only the exact keyword without having to mention = {true}, React\nautomatically sets the default value as true\n\n*/\n","export default function (state = {}, action) {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reducer from \"./reducers\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\n\nconst store = createStore(reducer, {}, applyMiddleware());\n\n/*\nhere first arguement is the reducer which takes care of the states through store, second\narguement is the initial state of the App component, ot any other component which \nis nested inside the Provider component, third arguement for redux thunk for middleware\nmanagement\n*/\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n","import {combineReducers} from 'redux'\r\nimport authReducer from './authReducer'\r\nimport Bulma from 'bulma/css/bulma.min.css'\r\n\r\n\r\nexport default function(){\r\n    combineReducers({\r\n        auth : authReducer\r\n    })\r\n}; "],"sourceRoot":""}